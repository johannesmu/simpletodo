{
  "name": "gulp-image",
  "version": "2.2.0",
  "description": "Optimize PNG, JPG, GIF, SVG images with gulp task.",
  "repository": {
    "type": "git",
    "url": "git://github.com/1000ch/gulp-image.git"
  },
  "author": {
    "name": "1000ch",
    "email": "shogo.sensui@gmail.com",
    "url": "http://github.com/1000ch"
  },
  "license": "MIT",
  "engines": {
    "node": ">=4.0.0"
  },
  "scripts": {
    "test": "mocha --require intelli-espower-loader --timeout=5000 --reporter=spec test/test.js"
  },
  "bugs": {
    "url": "https://github.com/1000ch/gulp-image/issues"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "exec-buffer": "^3.0.0",
    "execa": "^0.4.0",
    "filesize": "^3.3.0",
    "gifsicle": "^3.0.3",
    "gulp-util": "^3.0.7",
    "is-gif": "^1.0.0",
    "is-jpg": "^1.0.0",
    "is-png": "^1.0.0",
    "is-svg": "^2.0.1",
    "jpeg-recompress-bin": "^3.0.1",
    "jpegoptim-bin": "^3.0.0",
    "map-stream": "^0.1.0",
    "mozjpeg": "^4.1.1",
    "optipng-bin": "^3.1.2",
    "pngquant-bin": "^3.1.0",
    "svgo": "^0.6.6",
    "zopflipng-bin": "^3.0.1"
  },
  "devDependencies": {
    "espower-loader": "^1.0.0",
    "intelli-espower-loader": "^1.0.1",
    "mocha": "^2.5.3",
    "power-assert": "^1.4.1"
  },
  "keywords": [
    "compress",
    "minify",
    "optimize",
    "image",
    "img",
    "jpg",
    "jpeg",
    "png",
    "gif",
    "svg",
    "gulpplugin"
  ],
  "readme": "# [gulp-image](https://npmjs.org/package/gulp-image)\n\nOptimize PNG, JPEG, GIF, SVG images with gulp task.\n\n[![Build Status](https://travis-ci.org/1000ch/gulp-image.svg?branch=master)](https://travis-ci.org/1000ch/gulp-image)\n[![NPM version](https://badge.fury.io/js/gulp-image.svg)](http://badge.fury.io/js/gulp-image)\n[![Dependency Status](https://david-dm.org/1000ch/gulp-image.svg)](https://david-dm.org/1000ch/gulp-image)\n[![devDependency Status](https://david-dm.org/1000ch/gulp-image/dev-status.svg)](https://david-dm.org/1000ch/gulp-image#info=devDependencies)\n\n![](https://raw.github.com/1000ch/gulp-image/master/screenshot/terminal.png)\n\n## Install\n\n```bash\n$ npm install --save-dev gulp-image\n```\n\n## Usage\n\nThis is an example of `gulpfile.js`.\n\n```javascript\nconst gulp = require('gulp');\nconst image = require('gulp-image');\n\ngulp.task('image', function () {\n  gulp.src('./fixtures/*')\n    .pipe(image())\n    .pipe(gulp.dest('./dest'));\n});\n\ngulp.task('default', ['image']);\n```\n\nYou can pass an object to `image()` as argument such as following:\n\n```javascript\ngulp.task('image', function () {\n  gulp.src('./fixtures/*')\n    .pipe(image({\n      pngquant: true,\n      optipng: false,\n      zopflipng: true,\n      jpegRecompress: false,\n      jpegoptim: true,\n      mozjpeg: true,\n      gifsicle: true,\n      svgo: true\n    }))\n    .pipe(gulp.dest('./dest'));\n});\n```\n\nSet `false` if you don't want to apply.\n\nOptionally you may pass enable and disable options to [svgo](https://github.com/svg/svgo):\n\n```javascript\ngulp.task('image', function () {\n  gulp.src('./fixtures/*')\n    .pipe(image({\n      svgo: { enable: [\"removeRasterImages\"], disable: [\"removeDoctype\"] }\n    }))\n    .pipe(gulp.dest('./dest'));\n});\n```\n\n## License\n\nMIT: http://1000ch.mit-license.org/\n",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/1000ch/gulp-image",
  "_id": "gulp-image@2.2.0",
  "_from": "gulp-image@"
}
